<style>
    .customHide {
    border-radius: 4px;
  }
    .hide-on-mobile {
    display: block !important;
  }
</style>
{{ 'homepage.css' | asset_url | stylesheet_tag }}
{{ 'interior-design.css' | asset_url | stylesheet_tag }}
{{ 'bridal.css' | asset_url | stylesheet_tag }}
<script type="load">
   jQuery(document).ready(function($) {    
      function updateTabIndicator() {
            const activeTab1 = document.querySelector('.bridal-home .video-tab.active span');
              const activeTab = document.querySelector('.bridal-home .video-tab.active');
            const indicator = document.querySelector('.tab-indicator');
            if (activeTab && indicator) {
              const tabRect1 = activeTab1.getBoundingClientRect();
              const containerRect1 = activeTab1.parentElement.getBoundingClientRect();
              const tabRect = activeTab.getBoundingClientRect();
              const containerRect = activeTab.parentElement.getBoundingClientRect();
           const width = window.innerWidth;
            var left = 0;
               var width1 = 0;

                 left = tabRect.left - containerRect.left+55;
                width1 = tabRect.width+45;
      
          
              indicator.style.left = `${left}px`;
              indicator.style.width = `${width1}px`;
            }
          }
     let scrollEnabled = true;

// Debounce function to optimize scroll
function debounce(func, wait) {
  let timeout;
  return function () {
    const context = this, args = arguments;
    clearTimeout(timeout);
    timeout = setTimeout(() => func.apply(context, args), wait);
  };
}

// Map of section ID to tab
const tabMap = {};

$(".bridal-home .video-tab").each(function () {
  const tabId = $(this).data("tab-id");
  if (tabId) {
    tabMap[tabId] = $(this);
  }
});

// Remove active from all tabs
function clearActiveTabs() {
  $(".bridal-home .video-tab").removeClass("active");
}

// Activate tab for a section
function activateTab(sectionId) {
  if (tabMap[sectionId]) {
    clearActiveTabs();
    tabMap[sectionId].addClass("active");
    updateTabIndicator?.();
  }
}

// Create observer
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting && entry.intersectionRatio >= 0.8) {
        const sectionId = entry.target.id;
        activateTab(sectionId);
      }
    });
  },
  {
    root: null, // use viewport
    threshold: [0.8,1], // trigger when 50% visible (adjust as needed)
  }
);

// Observe all sections with class .row
$(".row[id]").each(function () {
  observer.observe(this);
});
{% comment %} function handleScroll() {
  if (!scrollEnabled) return;

  $(".row").each(function () {
    let section = $(this);
    let sectionTop = section.offset().top;
    let sectionBottom = sectionTop + section.outerHeight();
    let scrollTop = $(window).scrollTop();
    let windowHeight = $(window).height();

    // Your original customheight logic
    let customheight = 0;
    const width = window.innerWidth;
    if (width >= 768 && width < 992) {
      customheight = 300;
    } else if (width >= 992 && width < 1281) {
      customheight = 380;
    } else if (width >= 1281 && width < 1441) {
      customheight = 450;
    } else {
      customheight = 500;
    }

    if (scrollTop + windowHeight - customheight > sectionTop && scrollTop < sectionBottom) {
      let sectionId = section.attr("id");
      let matchingTab = $('.video-tab[data-tab-id="' + sectionId + '"]');

      if (matchingTab.length) {
        $(".bridal-home .video-tab").removeClass("active");
        matchingTab.addClass("active");
        updateTabIndicator();
      }
    }
  });
}

// Attach scroll handler if width > 768
if (window.innerWidth > 768) {
  $(window).on("scroll", debounce(handleScroll, 5));
} {% endcomment %}

// Tab click handler
$('.bridal-home .video-tab').on('click', function () {
  let tabId = $(this).data('tab-id');
 location.replace('#' + tabId)
  // $('.bridal-home .video-tab').removeClass('active');
  // $(this).addClass('active');
  {% comment %} $('.bridal-home .video-tab-content').removeClass('active');

  updateTabIndicator();

  // Temporarily disable scroll detection
  scrollEnabled = false;

  // Your original customheight logic here too (for offset)
  let customheight = 0;
  const width = window.innerWidth;
  if (width >= 768 && width < 992) {
    customheight = 10;
  } else if (width >= 992 && width < 1281) {
    customheight = 150;
  } else if (width >= 1281 && width < 1441) {
    customheight = 150;
  } else {
    customheight = 160;
  }

  // Smooth scroll to section with offset
  $('html, body').animate({
    scrollTop: $('#' + tabId).offset().top - customheight
  }, 5, function () {
    scrollEnabled = true; // Re-enable after scroll animation
  }); {% endcomment %}
});

// Set first tab as active on page load
$('.bridal-home .video-tab').first().addClass('active');
 
     const tabsvideo = document.querySelectorAll(".bridal-home .video-tab");
         let currentIndex = 0;
         if (window.innerWidth <= 768) {
           function updateTabsvideo(index) {
             tabsvideo.forEach((tab, i) => {
               tab.classList.remove("active");
               tab.style.display = i === index ? "inline-block" : "none"; // Show only the active tab
             });

             tabsvideo[index].classList.add("active");
             tabsvideo[index].click();
           }

         document.querySelector(".bridal-home .prev-btn-video").addEventListener("click", () => {
           if (currentIndex > 0) {
             currentIndex--;
             updateTabsvideo(currentIndex);
           }
         });

         document.querySelector(".bridal-home .next-btn-video").addEventListener("click", () => {
           if (currentIndex < tabsvideo.length - 1) {
             currentIndex++;
             updateTabsvideo(currentIndex);
           }
         });

         updateTabsvideo(currentIndex);
     }
     updateTabIndicator();
   });
</script>
<script type="load">
  $(document).ready(() => {
    updateSeasonContent();
    document.querySelectorAll('.bridal-home').forEach(function(el) {
      const parent = el.closest('.shopify-section');
      if (parent) {
          parent.classList.add('custom-sticky-style');
      }
  });
  });
</script>

{% schema %}
{
  "name": "Bridal home",
  "settings": []
}
{% endschema %}
