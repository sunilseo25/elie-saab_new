{{ 'featured-collection.css' | asset_url | stylesheet_tag }}
{{ 'product-grid.css' | asset_url | stylesheet_tag }}
{{ 'wishlist-two.css' | asset_url | stylesheet_tag }}
<div class="main__wishlist">
  <div class="small-12 columns page__heading">
    <h1>Your Wishlist, Tala</h1>
    <h2>Cocktail Dress</h2>
  </div>
  <div class="page__content">
    <div class="wishlist_avcls2">
      <div class="wishlist-title-filter-group">
        <h4><a href="">Return to your wishlist</a></h4>
        <div class="filter-group">
          <div class="filter-one">
            <a href="#SideFilters2" class="facets-toggle" id="Facets-Toggle">
              Filter
              <div class="select-arrow">
                <svg viewBox="0 0 8 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6.75 1.5L3.75 4.5L0.75 1.5" stroke="var(--color-body)" stroke-width="1.1" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
              </div>
            </a>
          </div>
          <div class="wish-thb-filter-sort">
            <div class="wishlist-select">
              <div class="wish-sort-by-option">
                <div class="wish-SortByBar">Sort by</div>
                <div class="select-arrow">
                  <svg width="8" height="6" viewBox="0 0 8 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6.75 1.5L3.75 4.5L0.75 1.5" stroke="var(--color-body)" stroke-width="1.1" stroke-linecap="round" stroke-linejoin="round"></path>
                  </svg>
                </div>
              </div>
              <div class="wish-sort-by-container">
                <div class="sort-option">
                  <label for="sort_created-descending">New In</label>
                </div>
                <div class="sort-option">
                  <label for="sort_best-selling">Recommended</label>
                </div>
                <div class="sort-option">
                  <label for="sort_price-ascending">Price - Low to High</label>
                </div>
                <div class="sort-option">
                  <label for="sort_price-descending">Price - High to Low </label>
                </div>
              </div>
            </div>
          </div>
          <div class="filter-more-option">
            <a href="#filter-more-option" class="facets-toggle" id="Facets-Toggle-More">
              More options
              <div class="select-arrow">
                <svg viewBox="0 0 8 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6.75 1.5L3.75 4.5L0.75 1.5" stroke="var(--color-body)" stroke-width="1.1" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
              </div>
            </a>
            <div class="moreoption-container">
              <div class="moreoption">
                <label for="sort_created-descending"
                  >Share your list
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                    width="100"
                    zoomAndPan="magnify"
                    viewBox="0 0 75 74.999997"
                    height="100"
                    preserveAspectRatio="xMidYMid meet"
                    version="1.0"
                  >
                    <defs><clipPath id="fd85c115af"><path d="M 7.226562 0 L 67.226562 0 L 67.226562 75 L 7.226562 75 Z M 7.226562 0 " clip-rule="nonzero"/></clipPath></defs><g clip-path="url(#fd85c115af)"><path fill="#000000" d="M 60.40625 74.835938 L 14.066406 74.835938 C 13.621094 74.839844 13.179688 74.800781 12.742188 74.71875 C 12.304688 74.636719 11.882812 74.511719 11.46875 74.34375 C 11.058594 74.175781 10.664062 73.972656 10.292969 73.726562 C 9.921875 73.480469 9.578125 73.203125 9.261719 72.890625 C 8.941406 72.578125 8.660156 72.238281 8.40625 71.867188 C 8.15625 71.5 7.945312 71.109375 7.769531 70.699219 C 7.597656 70.289062 7.464844 69.867188 7.371094 69.429688 C 7.28125 68.992188 7.230469 68.550781 7.226562 68.105469 L 7.226562 30.582031 C 7.230469 30.136719 7.28125 29.695312 7.371094 29.257812 C 7.464844 28.820312 7.597656 28.394531 7.769531 27.984375 C 7.945312 27.574219 8.15625 27.183594 8.40625 26.816406 C 8.660156 26.449219 8.941406 26.105469 9.261719 25.792969 C 9.578125 25.480469 9.921875 25.203125 10.292969 24.957031 C 10.664062 24.714844 11.058594 24.507812 11.46875 24.339844 C 11.882812 24.175781 12.304688 24.050781 12.742188 23.964844 C 13.179688 23.882812 13.621094 23.84375 14.066406 23.847656 L 26.3125 23.847656 C 26.585938 23.847656 26.851562 23.898438 27.109375 24.007812 C 27.363281 24.113281 27.589844 24.265625 27.785156 24.460938 C 27.980469 24.65625 28.128906 24.882812 28.234375 25.140625 C 28.339844 25.394531 28.394531 25.664062 28.394531 25.941406 C 28.394531 26.21875 28.339844 26.484375 28.234375 26.742188 C 28.128906 26.996094 27.980469 27.222656 27.785156 27.417969 C 27.589844 27.617188 27.363281 27.765625 27.109375 27.875 C 26.851562 27.980469 26.585938 28.03125 26.3125 28.03125 L 14.066406 28.03125 C 13.71875 28.023438 13.386719 28.082031 13.0625 28.207031 C 12.742188 28.332031 12.457031 28.511719 12.203125 28.753906 C 11.953125 28.992188 11.757812 29.269531 11.617188 29.585938 C 11.476562 29.902344 11.402344 30.234375 11.394531 30.582031 L 11.394531 68.105469 C 11.402344 68.449219 11.476562 68.78125 11.617188 69.097656 C 11.757812 69.414062 11.953125 69.695312 12.203125 69.933594 C 12.457031 70.171875 12.742188 70.351562 13.0625 70.476562 C 13.386719 70.601562 13.71875 70.660156 14.066406 70.652344 L 60.40625 70.652344 C 60.75 70.660156 61.085938 70.601562 61.40625 70.476562 C 61.730469 70.351562 62.015625 70.171875 62.265625 69.933594 C 62.515625 69.695312 62.710938 69.414062 62.851562 69.097656 C 62.992188 68.78125 63.066406 68.449219 63.078125 68.105469 L 63.078125 30.582031 C 63.066406 30.234375 62.992188 29.902344 62.851562 29.585938 C 62.710938 29.269531 62.515625 28.992188 62.265625 28.753906 C 62.015625 28.511719 61.730469 28.332031 61.40625 28.207031 C 61.085938 28.082031 60.75 28.023438 60.40625 28.03125 L 47.253906 28.03125 C 46.976562 28.03125 46.710938 27.980469 46.453125 27.875 C 46.199219 27.765625 45.972656 27.617188 45.777344 27.417969 C 45.582031 27.222656 45.433594 26.996094 45.328125 26.742188 C 45.222656 26.484375 45.167969 26.21875 45.167969 25.941406 C 45.167969 25.664062 45.222656 25.394531 45.328125 25.140625 C 45.433594 24.882812 45.582031 24.65625 45.777344 24.460938 C 45.972656 24.265625 46.199219 24.113281 46.453125 24.007812 C 46.710938 23.898438 46.976562 23.847656 47.253906 23.847656 L 60.40625 23.847656 C 60.851562 23.84375 61.289062 23.886719 61.726562 23.96875 C 62.160156 24.054688 62.585938 24.179688 62.996094 24.347656 C 63.40625 24.515625 63.796875 24.71875 64.167969 24.964844 C 64.539062 25.210938 64.882812 25.488281 65.199219 25.800781 C 65.515625 26.113281 65.800781 26.453125 66.050781 26.820312 C 66.300781 27.191406 66.511719 27.578125 66.6875 27.988281 C 66.859375 28.398438 66.992188 28.824219 67.082031 29.257812 C 67.175781 29.695312 67.222656 30.136719 67.226562 30.582031 L 67.226562 68.105469 C 67.222656 68.550781 67.175781 68.988281 67.082031 69.425781 C 66.992188 69.863281 66.859375 70.285156 66.6875 70.695312 C 66.511719 71.105469 66.300781 71.496094 66.050781 71.863281 C 65.800781 72.230469 65.515625 72.574219 65.199219 72.886719 C 64.882812 73.195312 64.539062 73.476562 64.167969 73.71875 C 63.796875 73.964844 63.40625 74.171875 62.996094 74.339844 C 62.585938 74.507812 62.160156 74.632812 61.726562 74.714844 C 61.289062 74.800781 60.851562 74.839844 60.40625 74.835938 Z M 37.394531 49.511719 C 37.117188 49.511719 36.851562 49.457031 36.597656 49.351562 C 36.339844 49.246094 36.117188 49.09375 35.921875 48.898438 C 35.726562 48.703125 35.574219 48.476562 35.46875 48.21875 C 35.363281 47.964844 35.3125 47.695312 35.3125 47.417969 L 35.3125 7.503906 L 25.144531 17.496094 C 24.945312 17.691406 24.71875 17.839844 24.460938 17.945312 C 24.207031 18.046875 23.941406 18.097656 23.664062 18.097656 C 23.386719 18.09375 23.121094 18.039062 22.867188 17.929688 C 22.613281 17.820312 22.390625 17.664062 22.195312 17.46875 C 22.003906 17.269531 21.855469 17.039062 21.75 16.78125 C 21.648438 16.523438 21.597656 16.257812 21.601562 15.980469 C 21.605469 15.703125 21.660156 15.433594 21.769531 15.179688 C 21.875 14.925781 22.03125 14.699219 22.226562 14.503906 L 36.261719 0.71875 C 36.386719 0.597656 36.527344 0.496094 36.675781 0.414062 C 37.015625 0.214844 37.378906 0.117188 37.769531 0.125 C 38.089844 0.132812 38.390625 0.210938 38.671875 0.363281 C 38.847656 0.457031 39.007812 0.574219 39.152344 0.714844 L 52.910156 14.523438 C 53.101562 14.71875 53.246094 14.945312 53.347656 15.199219 C 53.449219 15.457031 53.496094 15.71875 53.496094 15.996094 C 53.492188 16.269531 53.4375 16.53125 53.332031 16.785156 C 53.226562 17.039062 53.078125 17.261719 52.886719 17.457031 C 52.691406 17.648438 52.46875 17.800781 52.21875 17.90625 C 51.964844 18.011719 51.703125 18.066406 51.429688 18.070312 C 51.15625 18.070312 50.894531 18.019531 50.640625 17.917969 C 50.386719 17.816406 50.160156 17.671875 49.964844 17.480469 L 39.476562 6.945312 L 39.476562 47.417969 C 39.476562 47.695312 39.425781 47.964844 39.320312 48.21875 C 39.214844 48.476562 39.0625 48.703125 38.867188 48.898438 C 38.671875 49.09375 38.445312 49.246094 38.191406 49.351562 C 37.9375 49.457031 37.671875 49.511719 37.394531 49.511719 Z M 37.394531 49.511719 " fill-opacity="1" fill-rule="nonzero"/></g>
                  </svg>
                </label>
              </div>
              <div class="moreoption">
                <label for="sort_best-selling">Rename the list</label>
              </div>
              <div class="moreoption">
                <label for="sort_price-ascending">Edit the list</label>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="featured-collection swipe-on-mobile section-spacing section-spacing--disable-top  ">
        <div class="full-width-row">
          <div class="featured-collection__inner">
            {% assign collection_handle = 'all' %}
            {% assign products = collections[collection_handle].products %}
            <div id="product-grid-{{ section.id }}" class="products row">
              {% for product in products limit: 8 %}
                <div class="small-12 medium-6 large-3 columns">
                  <product-card class="product-card">
                    <button
                      class="st-wishlist-button m-none"
                      data-type="details"
                      data-handle="{{ product.handle }}"
                    ></button>
                    {% if product.images.size > 1 %}
                      <div id="product-image-slider-{{ forloop.index }}" class="product-image-slider">
                        {% for image in product.images %}
                          <a href="{{ product.url }}" class="product-featured-image">
                            <img src="{{ image | img_url: '600x600' }}" alt="{{ product.title }}">
                          </a>
                        {% endfor %}
                      </div>
                      <div class="progress-bar-container">
                        <div class="progress-bar" id="progress-bar-{{ forloop.index }}"></div>
                      </div>
                      <button class="slick-prev" id="slick-prev-{{ forloop.index }}">
                        {% render 'prev-cart' %}
                      </button>
                      <button class="slick-next" id="slick-next-{{ forloop.index }}">
                        {% render 'next-cart' %}
                      </button>
                    {% else %}
                      <a href="{{ product.url }}" class="product-featured-image">
                        <img src="{{ product.featured_image | img_url: '600x600' }}" alt="{{ product.title }}">
                      </a>
                    {% endif %}
                    <div class="product-card-info test mm">
                      <a href="{{ product.url }}" class="product-card-title">{{ product.title }}</a>
                      <div class="price">
                        {% if product.compare_at_price > product.price %}
                          <span class="original-price">{{ product.compare_at_price | money }}</span>
                          <span class="sale-price">{{ product.price | money }}</span>
                        {% else %}
                          <span class="price">{{ product.price | money }}</span>
                        {% endif %}
                      </div>
                    </div>
                    <!-- Notify custom button start -->
                    <form class="notify-form">
                      {% if product.available == false %}
                        <button class="notify_btn button" type="button">Notify when size is available</button>
                        <div id="custom_notify" class="custom_notify" style="display: none;">
                          <input type="email" class="external-email" placeholder="Enter your email to be notified">
                          <p class="error_message" style="display: none; color: red;">
                            Please enter a valid email address.
                          </p>
                          <div class="success_message" style="display: none;">
                            <span class="added_bag-text"> We’ll notify you </span>
                          </div>
                        </div>
                      {% endif %}
                    </form>
                    <!-- Notify custom button end -->
                  </product-card>
                </div>
              {% endfor %}
            </div>

            <!--  -->
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="load" d-src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css">
<script type="load" d-src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>

<script type="load">
  $(window).on('load', function() {
    $('.product-image-slider').each(function(index, element) {
      var $slider = $(element);
      var $progressBar = $slider.siblings('.progress-bar-container').find('.progress-bar');

      $slider.on('init reInit afterChange', function(event, slick, currentSlide){
        var i = (currentSlide ? currentSlide : 0) + 1;
        var progress = (i / slick.slideCount) * 100;
        $progressBar.css('width', progress + '%');
      });

      $slider.slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        autoplay: false,
        dots: false,
        arrows: true,
        loop:false,
        prevArrow: $slider.siblings('.slick-prev'),
        nextArrow: $slider.siblings('.slick-next'),
        adaptiveHeight: true
      });
    });
  });
</script>

<script>
   document.addEventListener("DOMContentLoaded", function () {
    document.addEventListener("click", function (event) {
      // Notify Button Click -> Show Email Input
      if (event.target.closest(".notify_btn")) {
        const notifyButton = event.target.closest(".notify_btn");
        const productCard = notifyButton.closest(".product-card");
        const customNotify = productCard.querySelector(".custom_notify");

        if (customNotify) {
          notifyButton.style.display = "none";
          customNotify.style.display = "block";
        }
      }
    });

    // Handle Enter Key Press on Email Input
    document.addEventListener("keydown", function (event) {
      if (event.target.classList.contains("external-email") && event.key === "Enter") {
        event.preventDefault();

        const emailInput = event.target;
        const productCard = emailInput.closest(".product-card");
        const successMessage = productCard.querySelector(".success_message");
        const errorMessage = productCard.querySelector(".error_message");

        if (isValidEmail(emailInput.value.trim())) {
          console.log("Email Submitted:", emailInput.value.trim());
          successMessage.style.display = "block";
          successMessage.classList.add("active");
          errorMessage.style.display = "none";
          emailInput.style.display = "none";
        } else {
          console.log("Invalid Email");
          errorMessage.style.display = "block";
          emailInput.classList.add("error");
        }
      }
    });

    // Email Validation Function
    function isValidEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }
  });
</script>

<script>
     $(document).ready(function () {
      $('#Facets-Toggle-More').click(function (event) {
          event.preventDefault();
          var $moreOptionsContainer = $('.moreoption-container');
          var $selectArrow = $('.filter-more-option .select-arrow');
          var $sortContainer = $('.wish-sort-by-container');
          var $sortArrow = $('.wish-sort-by-option .select-arrow');

          if ($sortContainer.is(':visible')) {
              $sortContainer.stop(true, true).slideUp(300);
              $sortArrow.removeClass('rotated');
          }
          if ($moreOptionsContainer.is(':hidden')) {
              $moreOptionsContainer.stop(true, true).slideDown(300);
              $selectArrow.addClass('rotated');
          } else {
              $moreOptionsContainer.stop(true, true).slideUp(300);
              $selectArrow.removeClass('rotated');
          }
      });

      $('.wish-SortByBar').click(function (event) {
          event.preventDefault();
          var $sortContainer = $('.wish-sort-by-container');
          var $selectArrow = $('.wish-sort-by-option .select-arrow');
          var $moreOptionsContainer = $('.moreoption-container');
          var $moreArrow = $('.filter-more-option .select-arrow');

          if ($moreOptionsContainer.is(':visible')) {
              $moreOptionsContainer.stop(true, true).slideUp(300);
              $moreArrow.removeClass('rotated');
          }

          if ($sortContainer.is(':hidden')) {
              $sortContainer.stop(true, true).slideDown(300);
              $selectArrow.addClass('rotated');
          } else {
              $sortContainer.stop(true, true).slideUp(300);
              $selectArrow.removeClass('rotated');
          }
      });
  });
</script>
{% schema %}
{
  "name": "Wishlist Two",
  "settings": [],
  "presets":[
    {
      "name":"Wishlist Two"
    }
  ]
}
{% endschema %}
